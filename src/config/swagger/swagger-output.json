{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Livros",
      "description": "Endpoints about books"
    },
    {
      "name": "Autores",
      "description": "Endpoints about author"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/autores": {
      "get": {
        "tags": [
          "Autores"
        ],
        "description": "Endpoint to get all authors",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Autores"
        ],
        "description": "Endpoint to insert new author",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/autores/{id}": {
      "get": {
        "tags": [
          "Autores"
        ],
        "description": "Endpoint to get author by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "Autores"
        ],
        "description": "Endpoint to update informations about the author",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Autores"
        ],
        "description": "Endpoint to remove the author",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/livros": {
      "get": {
        "tags": [
          "Livros"
        ],
        "description": "Endpoint to list all books",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Livros"
        ],
        "description": "Endpoint to insert new book",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/livros/busca": {
      "get": {
        "tags": [
          "Livros"
        ],
        "description": "Endpoint to get book by publishing company",
        "parameters": [
          {
            "name": "editora",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/livros/{id}": {
      "get": {
        "tags": [
          "Livros"
        ],
        "description": "Endpoint to get book by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "Livros"
        ],
        "description": "Endpoint to update book by id with new informations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Livros"
        ],
        "description": "Endpoint to exclude book by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "beneficiaires_schema": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "numero": {
            "type": "string",
            "example": "960017569517002"
          },
          "nome": {
            "type": "string",
            "example": "CCVRIFU LUCLFSVCM NXJ MZYJAB"
          },
          "apolice": {
            "type": "string",
            "example": "006001"
          },
          "razaoSocial": {
            "type": "string",
            "example": "HIVXX KIZNWJZX"
          },
          "plano": {
            "type": "string",
            "example": "Q123"
          },
          "descricaoPlano": {
            "type": "string",
            "example": "SAUDE TOP"
          },
          "cpf": {
            "type": "string",
            "example": "06854388724"
          },
          "dataNascimento": {
            "type": "string",
            "example": "19750612"
          },
          "cia": {
            "type": "string",
            "example": "571"
          },
          "nomeEmpresa": {
            "type": "string",
            "example": ""
          },
          "nomeMae": {
            "type": "string",
            "example": "CELIA PASSOS"
          },
          "nomeResponsavel": {
            "type": "string",
            "example": ""
          },
          "sexo": {
            "type": "string",
            "example": "F"
          },
          "ddd": {
            "type": "string",
            "example": "11"
          },
          "numeroTelefone": {
            "type": "string",
            "example": "036844479"
          },
          "codigoTipoParentesco": {
            "type": "string",
            "example": "TITULAR"
          },
          "codigoTipoSegurado": {
            "type": "string",
            "example": "00"
          },
          "codigoTipoSituacao": {
            "type": "string",
            "example": "01"
          },
          "codigoTipoAcomodacao": {
            "type": "string",
            "example": "Q"
          },
          "titular": {
            "type": "string",
            "example": "CARLA LEONELLI"
          },
          "numeroSucursal": {
            "type": "string",
            "example": "302"
          },
          "dataValidade": {
            "type": "string",
            "example": "21990131"
          },
          "codigoTipoRede": {
            "type": "string",
            "example": "30"
          },
          "descricaoTipoRede": {
            "type": "string",
            "example": "INTERNACIONAL"
          },
          "tipoPlano": {
            "type": "string",
            "example": ""
          },
          "isIndicadorConcierge": {
            "type": "string",
            "example": "true"
          },
          "isCobrancaIndividual": {
            "type": "string",
            "example": "true"
          },
          "isIndicadorDental": {
            "type": "string",
            "example": "false"
          },
          "isIndicadorSaude": {
            "type": "string",
            "example": "true"
          },
          "indicadorApoliceAdaptada": {
            "type": "string",
            "example": "AN"
          },
          "ramo": {
            "type": "object",
            "properties": {
              "codigo": {
                "type": "string",
                "example": "870"
              },
              "descricao": {
                "type": "string",
                "example": "SAUDE INDIVIDUAL"
              }
            }
          },
          "regiao": {
            "type": "object",
            "properties": {
              "codigo": {
                "type": "string",
                "example": "0"
              },
              "descricao": {
                "type": "string",
                "example": ""
              }
            }
          }
        }
      }
    },
    "insured_plan_details": {
      "type": "object",
      "properties": {
        "numeroCartao": {
          "type": "number",
          "example": 9600193265810
        },
        "nomeComercial": {
          "type": "string",
          "example": "EMPRESARIAL COLETIVO 8399Q123P"
        },
        "abrangenciaGeografica": {
          "type": "string",
          "example": "NACIONAL"
        },
        "numeroRegistroProduto": {
          "type": "number",
          "example": 878046
        },
        "segmentacaoAssistencial": {
          "type": "string",
          "example": "AMBULATORIAL + HOSPITALAR COM OBSTETRICIA"
        },
        "vigencia": {
          "type": "string",
          "example": "ANTERIOR A LEI N  9.656/98 (ADAPTADA)"
        },
        "status": {
          "type": "string",
          "example": "ATIVO COM COMERCIALIZACAO SUSPENSA"
        },
        "conjugate": {
          "type": "object",
          "properties": {
            "nomeComercial": {
              "type": "string",
              "example": "EMPRESARIAL COLETIVO 9001Q123"
            },
            "abrangenciaGeografica": {
              "type": "string",
              "example": "NACIONAL"
            },
            "numeroRegistroProduto": {
              "type": "number",
              "example": 8789019001
            },
            "segmentacaoAssistencial": {
              "type": "string",
              "example": "ODONTOLOGICO"
            },
            "vigencia": {
              "type": "string",
              "example": "ANTERIOR A LEI N  9.656/98 (ADAPTADA)"
            },
            "status": {
              "type": "string",
              "example": "ATIVO COM COMERCIALIZACAO SUSPENSA"
            }
          }
        }
      }
    },
    "error_500_schema": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "InternalServerError"
        },
        "message": {
          "type": "string",
          "example": "INTERNAL SERVER ERROR"
        },
        "status": {
          "type": "number",
          "example": 500
        },
        "data": {
          "type": "string",
          "example": "ERROR DATA"
        }
      }
    },
    "error_401_schema": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "UnauthorizedException"
        },
        "message": {
          "type": "string",
          "example": "UNAUTHORIZED"
        },
        "status": {
          "type": "number",
          "example": 401
        },
        "data": {
          "type": "string",
          "example": "ERROR DATA"
        }
      }
    },
    "error_503_schema": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "ServiceUnavailableException"
        },
        "message": {
          "type": "string",
          "example": "SERVICE UNAVAILABLE"
        },
        "status": {
          "type": "number",
          "example": 503
        },
        "data": {
          "type": "string",
          "example": "ERROR DATA"
        }
      }
    }
  }
}